:stylus
  .token
    //- background: $theme.base.dark
    //- color: $theme.base.on.dark
    nz-typo: $typo.body2

  .token-delimiter
    opacity: 0.7

  .token-comp
    opacity: 0.7
    padding: 0 4px
    cursor: pointer

  .token-field
    font-weight: $typo.button.font-weight !important
    padding: 0 4px
    cursor: pointer

  .token-value
    color: $theme.info.dark
    color: $theme.accent.dark
    padding: 0 4px



ng-container(nzLayout="row inline", nzLayoutAlign="start center")
  ng-template([ngIf]="isUnexpected", [ngIfElse]="ifExpected")
    .token.token-field(data-type="field") {{ model.field }}
    .token.token-comp(data-type="comp") {{ model.comp.label }}

    ng-template(ngFor, [ngForOf]="[].constructor(model.comp.valueCount)", let-index="index", let-isLast="last")
      .token.token-value(data-type="value") {{ model.resolvedValues[index].label }}
      .token.token-delimiter(data-type="delimiter", *ngIf="model.comp.delimiter && !isLast") {{ model.comp.delimiter }}

  ng-template(#ifExpected)
    .token.token-field(data-type="filter", (tap)="showFilterSuggestions()") {{ model.filter.label }}
    .token.token-comp(data-type="comp", (tap)="showCompSuggestions($event)") {{ model.comp.label }}

    ng-template([ngIf]="isInfinity", [ngIfElse]="ifFinite")
      .token.token-delimiter(data-type="values-begin") (
      ng-template(ngFor, [ngForOf]="model.resolvedValues", let-value, let-index="index", let-isLast="last")
        input.token.token-value(
            #input,
            data-type="value",
            autosize,
            [autosizeExtra]="isInputFocused(input) ? 30 : null",
            [value]="value.label",
            (input)="onValueInput(index, $event)",
            tabindex="-1")
        .token.token-delimiter(data-type="delimiter", *ngIf="model.comp.delimiter && !isLast") {{ model.comp.delimiter }}
      .token.token-delimiter(data-type="values-end") )

    ng-template(#ifFinite)
      ng-template(ngFor, [ngForOf]="[].constructor(model.comp.valueCount)", let-index="index", let-isLast="last")
        input.token.token-value(
            #input,
            data-type="value",
            autosize,
            [autosizeExtra]="isInputFocused(input) ? 30 : null",
            [value]="model.resolvedValues[index].label",
            (input)="onValueInput(index, $event)",
            tabindex="-1")
        .token.token-delimiter(data-type="delimiter", *ngIf="model.comp.delimiter && !isLast") {{ model.comp.delimiter }}

    button.nz-button(variant="very-tiny icon", color="common", tabindex="-1")
      i.nz-icon(class=icon("mdi/close", 17))


